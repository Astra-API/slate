<h1 id='otc'>OTC</h1><h2 id='authentication'>Authentication</h2>
<p>Endpoint: <code>https://prod.astra-api.dev/v2</code></p>

<p>You can generate an API key at <a href="https://terminal.astra-api.dev/settings/apikey">https://terminal.astra-api.dev/settings/apikey</a>. Set the header <code>x-astra-api-key</code> to the value of your API key.</p>

<p>Some endpoints may require you to provide your account ID. You can find this at <a href="https://terminal.astra-api.dev/settings/profile">https://terminal.astra-api.dev/settings/profile</a></p>
<h2 id='stream-quotes'>Stream quotes</h2>
<blockquote>
<p>Sample Request</p>
</blockquote>
<div class="highlight"><pre class="highlight shell"><code>/ws/stream-otc-quotes/<span class="o">{</span>account_id<span class="o">}</span>?from<span class="o">=</span>BTC&amp;to<span class="o">=</span>USD&amp;fromQty<span class="o">=</span>1.25
</code></pre></div>
<blockquote>
<p>Sample Response</p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"quote"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"quoteId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"a0743434-66c8-49b7-aca2-46c910a54cf1"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"accountId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"a0743434-66c8-49b7-aca2-46c910a54cf1"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"fromAsset"</span><span class="p">:</span><span class="w"> </span><span class="s2">"BTC"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"toAsset"</span><span class="p">:</span><span class="w"> </span><span class="s2">"USD"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"fromAssetQuantity"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.25</span><span class="p">,</span><span class="w">
        </span><span class="nl">"toAssetQuantity"</span><span class="p">:</span><span class="w"> </span><span class="mf">81436.0875</span><span class="p">,</span><span class="w">
        </span><span class="nl">"expiryTime"</span><span class="p">:</span><span class="w"> </span><span class="mi">1733561867046245</span><span class="p">,</span><span class="w">
        </span><span class="nl">"signature"</span><span class="p">:</span><span class="w"> </span><span class="s2">"6932874cf486617239c7d27100e911903ccbee05c8b07fe3f4299e047f46553a"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>
<p><code>/ws/stream-otc-quotes/{account_id}</code></p>

<p>This is a WebSocket endpoint that continuously streams quotes to the client at a periodic interval.</p>

<p>Each generated quote is for the specific asset pair and amount. The <code>fromQty</code> and <code>toQty</code> parameters specify the amount of the &#39;fromAsset&#39; or &#39;toAsset&#39; to trade. Exactly one of <code>fromQty</code> or <code>toQty</code> must be specified.</p>

<p>Each quote sent will include the expiry time of the quote, as well as a signature that will need to be sent while accepting a quote in order to successfully complete the trade.</p>
<h3 id='request'>Request</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>account_id</td>
<td>string</td>
<td>True</td>
<td>Account ID in the URL path</td>
</tr>
<tr>
<td>from</td>
<td>string</td>
<td>True</td>
<td>Asset to buy (query parameter)</td>
</tr>
<tr>
<td>to</td>
<td>string</td>
<td>True</td>
<td>Asset to sell (query parameter)</td>
</tr>
<tr>
<td>fromQty</td>
<td>number</td>
<td>True</td>
<td>Amount of &#39;fromAsset&#39; to buy (query parameter)</td>
</tr>
</tbody></table>
<h3 id='response'>Response</h3>
<table><thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>quote</td>
<td><a href="#quote">Quote</a></td>
<td>True</td>
<td>Quote for the trade</td>
</tr>
</tbody></table>
<h3 id='quote'>Quote</h3>
<table><thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>quoteId</td>
<td>string</td>
<td>True</td>
<td>Unique identifier for the quote</td>
</tr>
<tr>
<td>accountId</td>
<td>string</td>
<td>True</td>
<td>Account ID the quote was generated for</td>
</tr>
<tr>
<td>fromAsset</td>
<td>string</td>
<td>True</td>
<td>Asset to buy</td>
</tr>
<tr>
<td>toAsset</td>
<td>string</td>
<td>True</td>
<td>Asset to sell</td>
</tr>
<tr>
<td>fromAssetQuantity</td>
<td>number</td>
<td>True</td>
<td>Amount of fromAsset to buy</td>
</tr>
<tr>
<td>toAssetQuantity</td>
<td>number</td>
<td>True</td>
<td>Amount of toAsset to sell</td>
</tr>
<tr>
<td>expiryTime</td>
<td>number</td>
<td>True</td>
<td>Unix timestamp in microseconds when quote expires</td>
</tr>
<tr>
<td>signature</td>
<td>string</td>
<td>True</td>
<td>Signature required to execute trade with this quote</td>
</tr>
</tbody></table>
<h2 id='accept-quote'>Accept quote</h2>
<blockquote>
<p>Sample Request</p>
</blockquote>
<div class="highlight"><pre class="highlight shell"><code>POST /otc/accept-quote/<span class="o">{</span>account_id<span class="o">}</span>
</code></pre></div><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">#</span><span class="w"> </span><span class="err">Body</span><span class="w">
</span><span class="p">{</span><span class="w">
    </span><span class="nl">"quote"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"quoteId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"a0743434-66c8-49b7-aca2-46c910a54cf1"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"accountId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"a0743434-66c8-49b7-aca2-46c910a54cf1"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"fromAsset"</span><span class="p">:</span><span class="w"> </span><span class="s2">"BTC"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"toAsset"</span><span class="p">:</span><span class="w"> </span><span class="s2">"USD"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"fromAssetQuantity"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.25</span><span class="p">,</span><span class="w">
        </span><span class="nl">"toAssetQuantity"</span><span class="p">:</span><span class="w"> </span><span class="mf">81436.0875</span><span class="p">,</span><span class="w">
        </span><span class="nl">"expiryTime"</span><span class="p">:</span><span class="w"> </span><span class="mi">1733561867046245</span><span class="p">,</span><span class="w">
        </span><span class="nl">"signature"</span><span class="p">:</span><span class="w"> </span><span class="s2">"6932874cf486617239c7d27100e911903ccbee05c8b07fe3f4299e047f46553a"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>
<blockquote>
<p>Sample Response</p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{}</span><span class="w">
</span></code></pre></div>
<p><code>POST /otc/accept-quote/{account_id}</code></p>

<p>Accepts an OTC trade quote and completes the trade.</p>
<h3 id='request-2'>Request</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>account_id</td>
<td>string</td>
<td>True</td>
<td>Account ID in the URL path</td>
</tr>
<tr>
<td>quote</td>
<td><a href="#quote">Quote</a></td>
<td>True</td>
<td>Quote to accept for the trade</td>
</tr>
</tbody></table>
<h3 id='response-2'>Response</h3>
<p>If successful, returns a 200 response with an empty JSON in the response body. 
Otherwise, returns an error message.</p>
